library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity test_unit is
end entity;

architecture behavioral of test_unit is
    component communication_module is
        port(
            clk      : in std_logic;
            mcu_clk  : in std_logic;
            en       : in std_logic;
            rst      : in std_logic;
            ctrl     : in std_logic_vector(1 downto 0);
            inbits   : in std_logic_vector(9 downto 0);
            outbits  : out std_logic_vector(9 downto 0)
        );
    end component;

    signal clk      : std_logic := '0';
    signal mcu_clk  : std_logic := '0';
    signal en       : std_logic := '0';
    signal inbits   : std_logic_vector(9 downto 0) := (others => '0');
    signal ctrl     : std_logic_vector(1 downto 0) := (others => '0');
    signal output   : std_logic_vector(9 downto 0) := (others => '0');
    signal rst      : std_logic := '0';

begin
    u1: communication_module port map(
        clk => clk, 
        mcu_clk => mcu_clk, 
        en => en, 
        rst => rst, 
        ctrl => ctrl, 
        inbits => inbits, 
        outbits => output
    );

    -- Clock generation for clk
    clk_process: process
    begin
--        while true loop
            clk <= '0';
            wait for 50 ns;
            clk <= '1';
            wait for 50 ns;
--        end loop;
    end process;

    -- Clock generation for mcu_clk
    mcu_clk_process: process
    begin
--        while true loop
            mcu_clk <= '0';
            wait for 100 ns;
            mcu_clk <= '1';
            wait for 100 ns;
--        end loop;
    end process;

    stimulus: process
    begin
        -- Initial values
        rst <= '0';
        en <= '0';
        ctrl <= "00";
--         inbits <= (others => '0');
        
        wait for 100 ns;
        
        -- Apply reset
--         rst <= '1';
--         wait for 100 ns;
        rst <= '0';
        
        -- Enable and set control to input mode
        en <= '1';
        ctrl <= "01";
        wait for 100 ns;
        
        -- Test different input values
        
        inbits <= "1111101000";
        wait for 100 ns;
        
        
        inbits <= "0111110100";
        wait for 100 ns;
        
        inbits <= "0011111010";
        wait for 100 ns;
        
--         inbits <= "0000000000";
inbits <= "1111101000";
        wait for 200 ns;
        
        -- Change control to inference mode
        ctrl <= "10";
        wait for 1000 ns;
        
        -- Change control to output mode
        ctrl <= "11";
        wait for 2800 ns;

        -- Simulation end
        wait;
    end process;

end behavioral;
